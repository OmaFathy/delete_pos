#include <bits/stdc++.h>
#define ll long long int
using namespace std;
//ربنا أكرم من أي حد
//Jerry&Tom
//O_SOFTWARE
//هو انا هحل؟انتو بتوعي وانا بتعاكوو يتهدوني يهدكو
void omar(){
ios::sync_with_stdio(0);
cin.tie(0);

}
    struct node
  //  | 1 | o-----> دي نود

{
    int data; //النود بتتكون من الداتا والادريس بتاعت الداتا الي بعدها
    struct node*next;
    // | data | address
}*head,*temp;
void delet_pos(int pos)
{
    struct node *newnode,*nextnode;
    newnode= new node();


if(newnode == NULL)
    {
        cout<<"Unable to allocate memory.\n";
    }
    else
    {
        int i=1;
        temp=head;
        while(i<pos-1)
        {
            temp=temp->next;
            i++;
        }
 nextnode=temp->next;
 temp->next=nextnode->next;
 delete nextnode;
       temp=head;
    }
}

int main()
{
int deta;
    int choice=1;// دي الي هتخليني اخزن علي مزاج اليوزر بقي

 struct node*newnode; //مل نسخ بوينتر لل
 head=0;  //| head|--address the first element in linked list  -> | data | address
 while(choice)
{
newnode= new node();//  واحطها فالنيو نود يمعلمnode بعمل نسخه من الاستراكت

 cout<<"enter the data:\n";//بقول لليوزر حط الداتا يعمنا
 cin>>newnode->data;// بخزنها(خلصانه يجدعان والله العظيم)
 newnode->next;// بنتقل لمكان الادريس عشان اخش علي العنصر الي بعده
 if(head==0) //لو فالاول اول عنصر خالص الهيد بتاعه بصفر فكلو بيتسااواا
 {
    head=temp=newnode;
 }
 else
    {//غير كدا بخلي التيمب بقي الي هي اللنسخه الي هتتقعد تتنقل
        temp->next=newnode;//اخلي الادريس يشاور علي النيو نود
 temp=newnode;// والتيمب نفسه يشاور علي النيو نود كعنصر بقي

 }

 cout<<"do you want to continuo(0/1)?\n";
 cin>>choice;

 }
  temp=head;//برجعه لاول عنصر عشان الطباعه

 while(temp!=0)
 {
     cout<<temp->data<<" ";
     temp=temp->next;
 }
 cout<<endl;
 int pos;
 cout<<"enter the pos u need to delete"<<endl;
 cin>>pos;
  delet_pos(pos);
 cout<<"\nLinked List after delete pos from end: "<<endl;

 temp = head;
        while(temp != NULL)
        {
        cout<< temp->data<<" "; // Print data of current node
            temp = temp->next;                 // Move to next node
        }

return 0;

}
